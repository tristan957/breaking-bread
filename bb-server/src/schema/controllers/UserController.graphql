enum MealType {
	GUEST
	HOST
	BOTH
}

extend type Mutation {
	userSave(input: UserSaveInput!): User!
	userEdit(input: UserEditInput!): User
	userDelete(id: Int!): Boolean!
	userToggleWhitelist(userID: Int!, topics: [TopicInput!]!): [Topic!]
	userToggleBlacklist(userID: Int!, topics: [TopicInput!]!): [Topic!]
	userToggleFollowedTags(userID: Int!, tags: [TagInput!]!): [Tag!]
	userToggleFollowing(userID: Int!): [User!]
	userToggleSavedRecipe(recipeID: Int!, userID: Int!): [Recipe!]
	# userMealFeed(userID: Int!, first: Int!, after: String, ): MealFeed 
	userReviewSave(description: String, rating: Float!): UserReview!
	userReviewEdit(id: Int!, description: String, rating: Float): UserReview
}

extend type Query {
	user(id: Int!): User
	userAuthenticated(): User
	userReview(id: Int!): UserReview
}
